{"version":3,"file":"static/js/474.05db9155.chunk.js","mappings":"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","sources":["store/product-context.js","store/ProductProvider.js","webpack://react_task3/./src/components/Input/Input.module.css?1f33","components/Input/Input.js","hooks/use-input.js","webpack://react_task3/./src/components/Section/Products/ProductForm.module.css?6946","components/Section/Products/ProductForm.js","webpack://react_task3/./src/components/Pages/Dashboard/Table/TableHeader.module.css?022a","components/Pages/Dashboard/Table/TableHeader.js","webpack://react_task3/./src/components/UI/Overlays/Modal.module.css?922e","components/UI/Overlays/Modal.js","webpack://react_task3/./src/components/Pages/Dashboard/Table/TableCell.module.css?7957","components/Pages/Dashboard/Table/TableCell.js","webpack://react_task3/./src/components/Pages/Dashboard/Table/Table.module.css?9051","components/Pages/Dashboard/Table/Table.js","webpack://react_task3/./src/components/Pages/Dashboard/Dashboard.module.css?98cb","components/Pages/Dashboard/Dashboard.js","components/UI/Buttons/Button.js","components/UI/Buttons/ButtonOutline.js","components/UI/Buttons/RadioButton.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst ProductContext = React.createContext({\r\n  products: {},\r\n  fetchProducts: () => {},\r\n  addProduct: (product) => {},\r\n  editProduct: (productID, product) => {},\r\n  deleteProduct: (productID) => {},\r\n  adding: false,\r\n  submitted: undefined,\r\n  setSubmitted: () => {},\r\n  edited: false,\r\n  setEdited: () => {},\r\n  errorMessage: undefined,\r\n  setErrorMessage: (message) => {},\r\n  toggleAdding: () => {},\r\n});\r\n\r\nexport default ProductContext;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\n\r\nimport ProductContext from \"../store/product-context\";\r\nimport axios from \"axios\";\r\n\r\nfunction ProductProvider(props) {\r\n  const [products, setProducts] = useState({});\r\n  const [adding, setAdding] = useState(false);\r\n  const [submitted, setSubmitted] = useState();\r\n  const [edited, setEdited] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState();\r\n\r\n  const addingHandler = () => {\r\n    setAdding((previousState) => !previousState);\r\n  };\r\n\r\n  const fetchProducts = useCallback(async () => {\r\n    setErrorMessage();\r\n    console.log(\"fetching\");\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_DATABASE_LINK}/products.json`\r\n      );\r\n      setProducts(response.data);\r\n    } catch (error) {\r\n      setErrorMessage(error.message);\r\n      console.error(error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, [fetchProducts]);\r\n\r\n  const addProductHandler = useCallback(\r\n    async (data) => {\r\n      setErrorMessage();\r\n      console.log(\"adding the following product\", data);\r\n      try {\r\n        const response = await axios.post(\r\n          `${process.env.REACT_APP_DATABASE_LINK}/products.json`,\r\n          data\r\n        );\r\n        // const newProduct = { [response.data.name]: data };\r\n        // console.log(products);\r\n        // setProducts((previousState) => ({\r\n        //   newProduct,\r\n        //   ...previousState.products,\r\n        // }));\r\n        console.log(\"response\", response);\r\n        setSubmitted(response.data.name);\r\n        fetchProducts();\r\n      } catch (error) {\r\n        setErrorMessage(error.message);\r\n        console.error(error);\r\n      }\r\n    },\r\n    [fetchProducts]\r\n  );\r\n\r\n  const editProductHandler = useCallback(\r\n    async (ID, data) => {\r\n      setErrorMessage();\r\n      console.log(\"editing\");\r\n      console.log(`editing the product with ID ${ID}`);\r\n      console.log(\"new product details\", data);\r\n      try {\r\n        const response = await axios.put(\r\n          `${process.env.REACT_APP_DATABASE_LINK}/products/${ID}.json`,\r\n          data\r\n        );\r\n        console.log(\"response\", response);\r\n        setEdited(true);\r\n        fetchProducts();\r\n      } catch (error) {\r\n        setErrorMessage(error.message);\r\n        console.error(error);\r\n      }\r\n    },\r\n    [fetchProducts]\r\n  );\r\n\r\n  const deleteProductHandler = useCallback(\r\n    async (ID) => {\r\n      setErrorMessage();\r\n      console.log(\"deleting\");\r\n      console.log(`deleting product with ID ${ID}`);\r\n      // let productsTemp = { ...products };\r\n      // delete productsTemp[ID];\r\n      // setProducts(productsTemp);\r\n\r\n      try {\r\n        const response = await axios.delete(\r\n          `${process.env.REACT_APP_DATABASE_LINK}/products/${ID}.json`\r\n        );\r\n        console.log(\"response\", response);\r\n        fetchProducts();\r\n      } catch (error) {\r\n        setErrorMessage(error.message);\r\n        console.error(error);\r\n      }\r\n    },\r\n    [fetchProducts]\r\n  );\r\n\r\n  const productContext = {\r\n    products,\r\n    fetch: fetchProducts,\r\n    addProduct: addProductHandler,\r\n    editProduct: editProductHandler,\r\n    deleteProduct: deleteProductHandler,\r\n    adding,\r\n    submitted,\r\n    setSubmitted,\r\n    edited,\r\n    setEdited,\r\n    errorMessage,\r\n    setErrorMessage,\r\n    toggleAdding: addingHandler,\r\n  };\r\n\r\n  return (\r\n    <ProductContext.Provider value={productContext}>\r\n      {props.children}\r\n    </ProductContext.Provider>\r\n  );\r\n}\r\n\r\nexport default React.memo(ProductProvider);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__zwhLH\"};","import React, { useRef, useImperativeHandle } from \"react\";\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n  const reference = useRef();\r\n  useImperativeHandle(\r\n    ref,\r\n    () => {\r\n      return {\r\n        getValue() {\r\n          return reference.current.value;\r\n        },\r\n      };\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={`form-group row pb-2 ${props.className && props.className}`}\r\n    >\r\n      <label htmlFor={props.name} className=\"col-sm-2 col-form-label\">\r\n        {props.name}\r\n      </label>\r\n      <div className=\"col-sm-10\">\r\n        {props.textarea && (\r\n          <textarea\r\n            className=\"form-control\"\r\n            id={props.name}\r\n            rows=\"3\"\r\n            ref={reference}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n            onBlur={props.onBlur}\r\n            defaultValue={props.defaultValue}\r\n            readOnly={props.readOnly}\r\n            {...props.input}\r\n          />\r\n        )}\r\n        {!props.textarea && (\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id={props.name}\r\n            ref={reference}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n            onBlur={props.onBlur}\r\n            defaultValue={props.defaultValue}\r\n            readOnly={props.readOnly}\r\n            {...props.input}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Input;\r\n","import { useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  input: \"\",\r\n  touched: \"\",\r\n};\r\n\r\nconst inputReducer = (previousState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_INPUT\":\r\n      return {\r\n        ...previousState,\r\n        input: action.input,\r\n      };\r\n    case \"BLUR\":\r\n      return {\r\n        ...previousState,\r\n        touched: true,\r\n      };\r\n    case \"RESET\":\r\n      return initialState;\r\n\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n\r\nfunction useInput(validationFunction) {\r\n  const [inputState, inputDispatch] = useReducer(inputReducer, initialState);\r\n\r\n  let valid = validationFunction ? validationFunction(inputState.input) : true;\r\n  const error = !valid && inputState.touched;\r\n\r\n  const setInput = (input) => {\r\n    inputDispatch({\r\n      type: \"SET_INPUT\",\r\n      input: input,\r\n    });\r\n  };\r\n\r\n  const inputChangeHandler = (event) => {\r\n    inputDispatch({\r\n      type: \"SET_INPUT\",\r\n      input: event.target.value,\r\n    });\r\n  };\r\n\r\n  const inputBlurHandler = (event) => {\r\n    inputDispatch({\r\n      type: \"BLUR\",\r\n    });\r\n  };\r\n\r\n  const reset = () => {\r\n    inputDispatch({\r\n      type: \"RESET\",\r\n    });\r\n  };\r\n\r\n  return [\r\n    inputState.input,\r\n    setInput,\r\n    valid,\r\n    error,\r\n    inputChangeHandler,\r\n    inputBlurHandler,\r\n    reset,\r\n  ];\r\n}\r\n\r\nexport default useInput;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ProductForm_form__3OYhm\",\"invalid\":\"ProductForm_invalid__kHoRD\",\"error-text\":\"ProductForm_error-text__u1+hb\"};","import { useState, useContext } from \"react\";\r\nimport imageCompression from \"browser-image-compression\";\r\n\r\nimport Input from \"../../Input/Input\";\r\nimport Button from \"../../UI/Buttons/Button\";\r\nimport ButtonOutline from \"../../UI/Buttons/ButtonOutline\";\r\nimport RadioButton from \"../../UI/Buttons/RadioButton\";\r\n\r\nimport useInput from \"../../../hooks/use-input\";\r\nimport ProductContext from \"../../../store/product-context\";\r\n\r\nimport classes from \"./ProductForm.module.css\";\r\n\r\nconst validateText = (text) => text.trim().length !== 0;\r\n\r\nfunction ProductForm(props) {\r\n  const context = useContext(ProductContext);\r\n  const [firstLoad, setFirstLoad] = useState(true);\r\n  let productToBeEdited;\r\n  if (props.content) {\r\n    productToBeEdited = { ...props.content };\r\n    delete productToBeEdited.ID;\r\n  }\r\n\r\n  const [\r\n    name,\r\n    setName,\r\n    nameValid,\r\n    nameError,\r\n    nameChangeHandler,\r\n    nameBlurHandler,\r\n    nameReset,\r\n  ] = useInput(validateText);\r\n  const [alt, setAlt] = useState(\r\n    productToBeEdited ? productToBeEdited[\"Alt Name\"] : \"\"\r\n  );\r\n  const [\r\n    description,\r\n    setDescription,\r\n    descriptionValid,\r\n    descriptionError,\r\n    descriptionChangeHandler,\r\n    descriptionBlurHandler,\r\n    descriptionReset,\r\n  ] = useInput(validateText);\r\n  const [\r\n    price,\r\n    setPrice,\r\n    priceValid,\r\n    priceError,\r\n    priceChangeHandler,\r\n    priceBlurHandler,\r\n    priceReset,\r\n  ] = useInput((price) => price >= 1);\r\n  const [isNew, setIsNew] = useState(\r\n    productToBeEdited ? productToBeEdited.New : \"false\"\r\n  );\r\n  const [\r\n    discount,\r\n    setDiscount,\r\n    discountValid,\r\n    discountError,\r\n    discountChangeHandler,\r\n    discountBlurHandler,\r\n    discountReset,\r\n  ] = useInput(\r\n    (discount) =>\r\n      discount.toString().trim().length === 0 ||\r\n      (1 <= parseInt(discount) && parseInt(discount) < 100)\r\n  );\r\n  const [imageState, setImageState] = useState({\r\n    image: productToBeEdited ? productToBeEdited.Image : \"\",\r\n    valid: true,\r\n  });\r\n\r\n  if (productToBeEdited && firstLoad) {\r\n    setFirstLoad(false);\r\n    setName(productToBeEdited.Name);\r\n    setDescription(productToBeEdited.Description);\r\n    setPrice(productToBeEdited.Price);\r\n    setDiscount(productToBeEdited.Discount ? productToBeEdited.Discount : \"\");\r\n  }\r\n\r\n  let formValid = nameValid && descriptionValid && priceValid && discountValid;\r\n\r\n  //   const nameReference = useRef();\r\n  //   const altReference = useRef();\r\n  //   const descriptionReference = useRef();\r\n  //   const priceReference = useRef();\r\n  //   const [isNew, setIsNew] = useState(\"false\");\r\n  //   const discountReference = useRef();\r\n  //   const [image, setImage] = useState();\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    let imageValid =\r\n      imageState.image.startsWith(\"data:image/webp;base64,\") &&\r\n      imageState.image.length > \"data:image/webp;base64,\".length;\r\n    setImageState((previousState) => ({\r\n      ...previousState,\r\n      valid: imageValid,\r\n    }));\r\n    formValid = formValid && imageValid;\r\n    if (!formValid) {\r\n      return;\r\n    }\r\n\r\n    let product = {\r\n      name,\r\n      alt: alt.trim().length === 0 ? name : alt,\r\n      description,\r\n      price: parseFloat(price),\r\n      src: imageState.image,\r\n    };\r\n    if (isNew === \"true\") {\r\n      product = { ...product, new: \"true\" };\r\n    }\r\n    if (discount.toString().trim().length !== 0) {\r\n      product = { ...product, discount: parseInt(discount) };\r\n    }\r\n\r\n    if (productToBeEdited) {\r\n      product = { ...product, alt: alt };\r\n      context.editProduct(props.ID, product);\r\n    } else {\r\n      context.addProduct(product);\r\n    }\r\n\r\n    nameReset();\r\n    setAlt(\"\");\r\n    descriptionReset();\r\n    priceReset();\r\n    setIsNew(\"false\");\r\n    discountReset();\r\n    setImageState({ image: \"default\", valid: false });\r\n\r\n    props.onClick();\r\n  };\r\n\r\n  const imageHandler = (event) => {\r\n    var file = event.target.files[0];\r\n    var reader = new FileReader();\r\n    reader.onloadend = function () {\r\n      setImageState({\r\n        image: reader.result,\r\n        valid:\r\n          reader.result.startsWith(\"data:image/webp;base64,\") &&\r\n          reader.result.trim().length > \"data:image/webp;base64,\".trim().length,\r\n      });\r\n      // console.log(\"RESULT\", reader.result);\r\n    };\r\n    imageCompression(file, {\r\n      fileType: \"image/webp\",\r\n      initialQuality: 0.95,\r\n    }).then((x) => {\r\n      const compressedFile = new File([x], \"test.webp\", { type: \"image/webp\" });\r\n      reader.readAsDataURL(compressedFile);\r\n    });\r\n  };\r\n\r\n  const altChangeHandler = (event) => {\r\n    setAlt(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form id=\"form\" className={classes.form}>\r\n      <Input\r\n        className={`${nameError && classes.invalid}`}\r\n        name=\"Name\"\r\n        input={{ placeholder: \"Name\" }}\r\n        value={name}\r\n        onChange={nameChangeHandler}\r\n        onBlur={nameBlurHandler}\r\n        //   ref={nameReference}\r\n      />\r\n      {nameError && <p className={classes[\"error-text\"]}>Invalid Name</p>}\r\n      <Input\r\n        name=\"Alt Name\"\r\n        input={{ placeholder: \"Alt Name (Same As Name By Default)\" }}\r\n        value={alt}\r\n        onChange={altChangeHandler}\r\n        // ref={altReference}\r\n      />\r\n      <Input\r\n        className={`${descriptionError && classes.invalid}`}\r\n        name=\"Description\"\r\n        input={{ placeholder: \"Description\" }}\r\n        value={description}\r\n        onChange={descriptionChangeHandler}\r\n        onBlur={descriptionBlurHandler}\r\n        // ref={descriptionReference}\r\n        textarea\r\n      />\r\n      {descriptionError && (\r\n        <p className={classes[\"error-text\"]}>Invalid Description</p>\r\n      )}\r\n      <Input\r\n        className={`${priceError && classes.invalid}`}\r\n        name=\"Price\"\r\n        input={{ placeholder: \"Price\", type: \"number\", min: 1, step: 0.01 }}\r\n        value={price}\r\n        onChange={priceChangeHandler}\r\n        onBlur={priceBlurHandler}\r\n        // ref={priceReference}\r\n      />\r\n      {priceError && <p className={classes[\"error-text\"]}>Invalid Price</p>}\r\n      <fieldset className=\"form-group py-2\">\r\n        <div className=\"row\">\r\n          <legend className=\"col-form-label col-sm-2 pt-0\">New</legend>\r\n          <div className=\"col-sm-10\">\r\n            <div className=\"form-check px-0\">\r\n              <RadioButton\r\n                className=\"m-0\"\r\n                name=\"New\"\r\n                id=\"true\"\r\n                value=\"true\"\r\n                onChange={setIsNew.bind(null, \"true\")}\r\n                checked={productToBeEdited && productToBeEdited.New === \"true\"}\r\n              />\r\n              <label className=\"form-check-label me-5\" htmlFor=\"true\">\r\n                True\r\n              </label>\r\n              <RadioButton\r\n                className=\"m-0\"\r\n                name=\"New\"\r\n                id=\"false\"\r\n                value=\"false\"\r\n                onChange={setIsNew.bind(null, \"false\")}\r\n                checked={!(productToBeEdited && productToBeEdited.New)}\r\n              />\r\n              <label className=\"form-check-label me-5\" htmlFor=\"false\">\r\n                False\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </fieldset>\r\n      <Input\r\n        className={`${!discountValid && classes.invalid}`}\r\n        name=\"Discount\"\r\n        input={{\r\n          placeholder: \"Discount Percentage (1-99)\",\r\n          type: \"number\",\r\n          min: 1,\r\n          step: 1,\r\n          max: 99,\r\n        }}\r\n        value={discount}\r\n        onChange={discountChangeHandler}\r\n        onBlur={discountBlurHandler}\r\n        // ref={discountReference}\r\n      />\r\n      {!discountValid && (\r\n        <p className={classes[\"error-text\"]}>Invalid Discount</p>\r\n      )}\r\n      <Input\r\n        className={`${!imageState.valid && classes.invalid}`}\r\n        name=\"Image\"\r\n        onChange={imageHandler}\r\n        input={{ type: \"file\", accept:\"image/*\" }}\r\n        // onChange={imageChangeHandler}\r\n        // onBlur={imageBlurHandler}\r\n      />\r\n      {!imageState.valid && (\r\n        <p className={classes[\"error-text\"]}>Invalid Image</p>\r\n      )}\r\n      <div className=\"form-group row pt-3\">\r\n        <div className=\"container-fluid d-flex justify-content-end\">\r\n          <Button\r\n            onClick={submitHandler}\r\n            className=\"mx-2\"\r\n            text=\"Submit\"\r\n            disabled={!formValid}\r\n          />\r\n          <ButtonOutline\r\n            onClick={props.onClick}\r\n            className=\"mx-2\"\r\n            text=\"Cancel\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ProductForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"header-row\":\"TableHeader_header-row__mbTZD\",\"header-item\":\"TableHeader_header-item__+qemo\"};","import React from \"react\";\r\n\r\nimport classes from \"./TableHeader.module.css\";\r\n\r\nfunction TableHeader(props) {\r\n  const headers = props.headers.map((header, index) => (\r\n    <th key={`header${index}`} className={classes[\"header-item\"]}>\r\n      {header}\r\n    </th>\r\n  ));\r\n  return (\r\n    <thead>\r\n      <tr className={classes[\"header-row\"]}>{headers}</tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nexport default React.memo(TableHeader);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__MtgIY\",\"no-form\":\"Modal_no-form__K74h9\",\"modal\":\"Modal_modal__KTaFQ\",\"slide-down\":\"Modal_slide-down__N6TWj\"};","import ReactDOM from \"react-dom\";\r\n\r\nimport classes from \"./Modal.module.css\";\r\n\r\nfunction Backdrop(props) {\r\n  return <div className={classes.backdrop} onClick={props.onClick} />;\r\n}\r\n\r\nfunction Overlay(props) {\r\n  return (\r\n    <div className={`${classes.modal} ${props.noForm && classes[\"no-form\"]}`}>\r\n      <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Modal(props) {\r\n  return (\r\n    <>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onClick={props.onClick} />,\r\n        document.getElementById(\"overlay\")\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <Overlay noForm={props.noForm}>{props.children}</Overlay>,\r\n        document.getElementById(\"overlay\")\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cell-item\":\"TableCell_cell-item__RAftp\",\"cell-row\":\"TableCell_cell-row__hrntF\",\"active-row\":\"TableCell_active-row__QU-uG\"};","import React, { useContext, useState } from \"react\";\r\n\r\nimport Button from \"../../../UI/Buttons/Button\";\r\nimport ButtonOutline from \"../../../UI/Buttons/ButtonOutline\";\r\nimport ProductContext from \"../../../../store/product-context\";\r\nimport Modal from \"../../../UI/Overlays/Modal\";\r\nimport ProductForm from \"../../../Section/Products/ProductForm\";\r\nimport Icon from \"../../../UI/Icon\";\r\n\r\nimport classes from \"./TableCell.module.css\";\r\n\r\nfunction TableCell(props) {\r\n  const context = useContext(ProductContext);\r\n  const [confirm, setConfirm] = useState(false);\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const editingHandler = () => {\r\n    setEditing((previousState) => !previousState);\r\n  };\r\n\r\n  let content = Object.keys(props.content).map((key, index) => (\r\n    <td key={`cell${props.rowNumber}${index}`} className={classes[\"cell-item\"]}>\r\n      {props.content[key] &&\r\n        !props.content[key].toString().startsWith(\"data:image/png;base64,\") &&\r\n        key !== \"New\" &&\r\n        props.content[key]}\r\n      {props.content[key] &&\r\n        !props.content[key].toString().startsWith(\"data:image/png;base64,\") &&\r\n        key === \"New\" && (\r\n          <Icon\r\n            iconName=\"bi bi-check-square-fill\"\r\n            style={{ color: \"#b88e2f\" }}\r\n          />\r\n        )}\r\n      {props.content[key] &&\r\n        props.content[key].toString().startsWith(\"data:image/png;base64,\") && (\r\n          <img\r\n            src={props.content[key]}\r\n            alt={props.content[\"Alt Name\"]}\r\n            className=\"img-fluid w-100\"\r\n            style={{ height: \"200px\" }}\r\n          />\r\n        )}\r\n    </td>\r\n  ));\r\n\r\n  content = content.concat(\r\n    <td key={`cell${props.rowNumber}modify`} className={classes[\"cell-item\"]}>\r\n      {!confirm && (\r\n        <>\r\n          <ButtonOutline className=\"\" text=\"Edit\" onClick={editingHandler} />\r\n          <Button\r\n            text=\"Delete\"\r\n            // onClick={context.deleteProduct.bind(null, props.ID)}\r\n            onClick={setConfirm.bind(null, true)}\r\n          />\r\n        </>\r\n      )}\r\n      {confirm && (\r\n        <div className=\"container\">\r\n          <p>Confirm Delete?</p>\r\n          <Button\r\n            className=\"mx-1\"\r\n            text=\"Yes\"\r\n            // onClick={context.deleteProduct.bind(null, props.ID)}\r\n            onClick={context.deleteProduct.bind(null, props.ID)}\r\n          />\r\n          <ButtonOutline\r\n            className=\"mx-1 px-3\"\r\n            text=\"No\"\r\n            onClick={setConfirm.bind(null, false)}\r\n          />\r\n        </div>\r\n      )}\r\n    </td>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {editing && (\r\n        <Modal onClick={editingHandler}>\r\n          <p\r\n            className=\"m-0 p-3\"\r\n            style={{ backgroundColor: \"#b88e2f\", color: \"white\" }}\r\n          >\r\n            Editing Product with ID: {props.ID}\r\n          </p>\r\n          <ProductForm\r\n            onClick={editingHandler}\r\n            edit\r\n            ID={props.ID}\r\n            content={props.content}\r\n          />\r\n        </Modal>\r\n      )}\r\n      <tr className={classes[\"cell-row\"]}>{content}</tr>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(TableCell);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"styled-table\":\"Table_styled-table__nKwMX\"};","import { useMemo, useContext } from \"react\";\r\n\r\nimport TableHeader from \"./TableHeader\";\r\nimport TableCell from \"./TableCell\";\r\nimport ProductContext from \"../../../../store/product-context\";\r\n\r\nimport classes from \"./Table.module.css\";\r\n\r\nfunction Table(props) {\r\n  const context = useContext(ProductContext);\r\n\r\n  const productsList = Object.keys(context.products).map((productID, index) => (\r\n    <TableCell\r\n      key={productID}\r\n      ID={productID}\r\n      rowNumber={index}\r\n      content={{\r\n        ID: productID,\r\n        Name: context.products[productID].name,\r\n        \"Alt Name\": context.products[productID].alt,\r\n        Description: context.products[productID].description,\r\n        Price: context.products[productID].price,\r\n        New: context.products[productID].new,\r\n        Discount: context.products[productID].discount,\r\n        Image: context.products[productID].src,\r\n      }}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <table className={classes[\"styled-table\"]}>\r\n      <TableHeader\r\n        headers={useMemo(\r\n          () => [\r\n            \"Product ID\",\r\n            \"Name\",\r\n            \"Alt Name\",\r\n            \"Description\",\r\n            \"Price\",\r\n            \"New\",\r\n            \"Discount\",\r\n            \"Image\",\r\n            \"Modify\",\r\n          ],\r\n          []\r\n        )}\r\n      />\r\n      <tbody>{productsList}</tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"limit-height\":\"Dashboard_limit-height__dEhql\"};","import { useContext } from \"react\";\r\n\r\nimport ProductProvider from \"../../../store/ProductProvider\";\r\nimport ProductContext from \"../../../store/product-context\";\r\nimport ProductForm from \"../../Section/Products/ProductForm\";\r\nimport Button from \"../../UI/Buttons/Button\";\r\nimport Table from \"./Table/Table\";\r\nimport Modal from \"../../UI/Overlays/Modal\";\r\n\r\nimport classes from \"./Dashboard.module.css\";\r\n\r\nfunction Dashboard(props) {\r\n  document.title = \"Dashboard\";\r\n  const context = useContext(ProductContext);\r\n\r\n  return (\r\n    <>\r\n      {context.errorMessage && (\r\n        <Modal onClick={context.setErrorMessage.bind(null, undefined)} noForm>\r\n          <p>An Error occured</p>\r\n          <p>Error Message: {context.errorMessage}</p>\r\n          <div className=\"container text-end\">\r\n            <Button\r\n              onClick={context.setErrorMessage.bind(null, undefined)}\r\n              className=\"mx-2\"\r\n              text=\"Ok\"\r\n            />\r\n          </div>\r\n        </Modal>\r\n      )}\r\n      {context.adding && (\r\n        <Modal onClick={context.toggleAdding}>\r\n          <ProductForm onClick={context.toggleAdding} add />\r\n        </Modal>\r\n      )}\r\n      {context.submitted && (\r\n        <Modal noForm onClick={context.toggleAdding}>\r\n          <p>Product Submitted Successfully with ID: {context.submitted}</p>\r\n          <div className=\"container text-end\">\r\n            <Button\r\n              onClick={context.setSubmitted.bind(null, undefined)}\r\n              className=\"mx-2\"\r\n              text=\"Ok\"\r\n            />\r\n          </div>\r\n        </Modal>\r\n      )}\r\n      {context.edited && (\r\n        <Modal noForm onClick={context.setEdited.bind(null, false)}>\r\n          <p>Product Edited Successfully</p>\r\n          <div className=\"container text-end\">\r\n            <Button\r\n              onClick={context.setEdited.bind(null, false)}\r\n              className=\"mx-2\"\r\n              text=\"Ok\"\r\n            />\r\n          </div>\r\n        </Modal>\r\n      )}\r\n      <div className={`container-fluid px-5 pb-5 ${classes[\"limit-height\"]}`}>\r\n        <div className=\"container-fluid d-flex justify-content-center my-5\">\r\n          <Button\r\n            className=\"w-25\"\r\n            text=\"New Product\"\r\n            onClick={context.toggleAdding}\r\n          />\r\n        </div>\r\n        <Table />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport const DashBoardExport = () => (\r\n  <ProductProvider>\r\n    <Dashboard />\r\n  </ProductProvider>\r\n);\r\nexport default DashBoardExport;\r\n","function Button(props) {\r\n  return (\r\n    <button\r\n      className={`btn yellow-button ${props.className && props.className}`}\r\n      style={{\r\n        fontWeight: \"650\",\r\n        fontSize: \"16px\",\r\n        lineHeight: \"24px\",\r\n      }}\r\n      onClick={props.onClick}\r\n      hidden={props.hidden}\r\n      type={props.type}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.text}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","function ButtonOutline(props) {\r\n  return (\r\n    <div\r\n      className={`btn yellow-button-outline ${\r\n        props.className && props.className\r\n      }`}\r\n      style={{\r\n        fontWeight: \"700\",\r\n        fontSize: \"16px\",\r\n        lineHeight: \"24px\",\r\n      }}\r\n      onClick={props.onClick}\r\n      hidden={props.hidden}\r\n    >\r\n      {props.text}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ButtonOutline;\r\n","const RadioButton = (props) => {\r\n  return (\r\n    <div\r\n      className={`form-check form-check-inline ${\r\n        props.className && props.className\r\n      }`}\r\n    >\r\n      <input\r\n        aria-label={props.id}\r\n        className=\"radio-button\"\r\n        type=\"radio\"\r\n        name={props.name}\r\n        id={props.id}\r\n        value={props.value}\r\n        defaultChecked={props.checked}\r\n        onClick={props.onClick}\r\n        onChange={props.onChange}\r\n      />\r\n      {props.label && (\r\n        <label class=\"form-check-label\" for={props.id}>\r\n          {props.value}\r\n        </label>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RadioButton;\r\n"],"names":["React","products","fetchProducts","addProduct","product","editProduct","productID","deleteProduct","adding","submitted","undefined","setSubmitted","edited","setEdited","errorMessage","setErrorMessage","message","toggleAdding","ProductProvider","props","setProducts","useState","setAdding","useCallback","async","console","log","response","axios","get","concat","process","data","error","useEffect","addProductHandler","post","name","editProductHandler","ID","put","deleteProductHandler","delete","productContext","fetch","addingHandler","previousState","_jsx","ProductContext","Provider","value","children","ref","reference","useRef","useImperativeHandle","getValue","current","_jsxs","className","htmlFor","textarea","id","rows","onChange","onBlur","defaultValue","readOnly","input","type","initialState","touched","inputReducer","action","validationFunction","inputState","inputDispatch","useReducer","valid","event","target","reset","validateText","text","trim","length","context","useContext","firstLoad","setFirstLoad","productToBeEdited","content","setName","nameValid","nameError","nameChangeHandler","nameBlurHandler","nameReset","useInput","alt","setAlt","description","setDescription","descriptionValid","descriptionError","descriptionChangeHandler","descriptionBlurHandler","descriptionReset","price","setPrice","priceValid","priceError","priceChangeHandler","priceBlurHandler","priceReset","isNew","setIsNew","New","discount","setDiscount","discountValid","discountError","discountChangeHandler","discountBlurHandler","discountReset","toString","parseInt","imageState","setImageState","image","Image","Name","Description","Price","Discount","formValid","classes","Input","placeholder","min","step","RadioButton","bind","checked","max","file","files","reader","FileReader","onloadend","result","startsWith","imageCompression","fileType","initialQuality","then","x","compressedFile","File","readAsDataURL","accept","Button","onClick","preventDefault","imageValid","parseFloat","src","new","disabled","ButtonOutline","TableHeader","headers","map","header","index","Backdrop","backdrop","Overlay","modal","noForm","_Fragment","ReactDOM","document","getElementById","TableCell","confirm","setConfirm","editing","setEditing","editingHandler","Object","keys","key","Icon","iconName","style","color","height","rowNumber","Modal","backgroundColor","ProductForm","edit","productsList","useMemo","Dashboard","title","add","Table","DashBoardExport","fontWeight","fontSize","lineHeight","hidden","defaultChecked","label","class","for"],"sourceRoot":""}